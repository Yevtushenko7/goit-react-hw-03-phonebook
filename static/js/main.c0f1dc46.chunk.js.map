{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/Contact/Contact.module.css"],"names":["module","exports","ContactForm","state","name","number","onSubmit","e","preventDefault","props","formReset","setState","onChange","currentTarget","value","this","className","styles","label","input","type","pattern","title","required","button","Component","Contact","contacts","onDeleteClick","map","id","onClick","ContactsList","ContactList","Filter","onFilter","App","filter","onFormSubmit","contact","shortid","generate","some","i","alert","onDeleteContactClick","prevState","onFilterInput","onFilterChange","toLowerCase","includes","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f1dc46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__7n7Pn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1eTaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__2cxQ8\",\"label\":\"ContactForm_label__1EeaF\",\"input\":\"ContactForm_input__ZRbup\",\"button\":\"ContactForm_button__1Ydih\"};","import React from \"react\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../ContactForm/ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.onSubmit} className={styles.ContactForm}>\n        <label className={styles.label}>\n          Name:\n          <input\n            className={styles.input}\n            type=\"text\"\n            onChange={this.onChange}\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number:\n          <input\n            className={styles.input}\n            type=\"tel\"\n            value={number}\n            onChange={this.onChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button\n          type=\"submit\"\n          onSubmit={this.onSubmit}\n          className={styles.button}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"../Contact/Contact.module.css\";\n\nconst Contact = ({ contacts, onDeleteClick }) =>\n  contacts.map(({ id, name, number }) => {\n    return (\n      <li className={styles.Contact} key={id}>\n        {name}: {number}\n        <button\n          className={styles.button}\n          onClick={() => onDeleteClick(id)}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\nexport default Contact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Contact from \"./Contact/Contact\";\nimport styles from \"../ContactList/ContactList.module.css\";\n\nconst ContactsList = ({ contacts, onDeleteClick }) => (\n  <ul className={styles.ContactList}>\n    <Contact contacts={contacts} onDeleteClick={onDeleteClick} />\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Filter/Filter.module.css\";\n\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onFilter}\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactsList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      this.setState({ contacts: JSON.parse(contacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  onFormSubmit = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.state.contacts.some((i) => i.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  onDeleteContactClick = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((i) => i.id !== id),\n    }));\n  };\n\n  onFilterInput = (e) => {\n    const value = e.currentTarget.value;\n    this.setState({ filter: value });\n  };\n\n  onFilterChange = () => {\n    return this.state.contacts.filter((i) =>\n      i.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onFormSubmit} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilter={this.onFilterInput} />\n        <ContactsList\n          contacts={this.onFilterChange()}\n          onDeleteClick={this.onDeleteContactClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__1kjSw\",\"button\":\"Contact_button__2GSJ6\"};"],"sourceRoot":""}